  #   steps:
---
 
name: GCP Storage Bucket 
on: 
  workflow_dispatch:
    inputs:
      Operation_Needed:
        type: choice
        description: What operation needs to be performed  
        options:
          - Select Operation to be Performed
          - Create
          - Delete 
        required: true
      GCP_Service:
        type: choice
        description: Choose GCP Service  
        options:
          - Select GCP service you want to deploy
          - Storage Bucket
          - Cloud function  
        required: true
      Name:
        description: 'Name of the GCP resource to be created'
        required: true
      Region:
        description: 'Region where to be created'
        required: true

jobs:
  GCP_Create_Bucket:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.Operation_Needed == 'Create' && github.event.inputs.GCP_Service == 'Storage Bucket' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with: 
          python-version: 3.8

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - name: Install pip package for gcloud
        run: pip install google-cloud-storage
        
      - name: Execute Python code
        run: |
          name_of_bucket=${{ github.event.inputs.Name }} region=${{ github.event.inputs.Region }} python Python_scripts/create_bucket.py

  GCP_Delete_Bucket:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.Operation_Needed == 'Delete' && github.event.inputs.GCP_Service == 'Storage Bucket' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with: 
          python-version: 3.8

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - name: Install pip package for gcloud
        run: pip install google-cloud-storage
        
      - name: Execute Python code to Delete GCP Bucket
        run: |
          name_of_bucket=${{ github.event.inputs.Name }} python Python_scripts/delete_bucket.py

  # GCP_Cloud_Function_Deployment:
  #   runs-on: ubuntu-latest
  #   if: ${{ github.event.inputs.GCP_Service == 'Cloud Function' }}
  #     - uses: actions/checkout@v2
  #     - name: Setup Python
  #       uses: actions/setup-python@v2
  #       with: 
  #         python-version: 3.8

  #     - name: 'Authenticate to Google Cloud'
  #       uses: 'google-github-actions/auth@v0'
  #       with:
  #         credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

  #     - name: 'Set up Cloud SDK'
  #       uses: 'google-github-actions/setup-gcloud@v0'

  #     - name: 'Use gcloud CLI'
  #       run: 'gcloud functions deploy ${{ github.event.inputs.Name }} --entry-point folder-name --runtime python39 --trigger-resource <name of the bucket> --trigger-event google.storage.object.finalize'
    
        